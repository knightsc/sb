package sb

// switch n.Filter {
// case 0x00:
// 	b.WriteString(" null")
// case 0x01:
// 	b.WriteString(" path")
// case 0x02:
// 	b.WriteString(" mount-relative-path")
// case 0x03:
// 	b.WriteString(" xattr")
// case 0x04:
// 	b.WriteString(" file-mode")
// case 0x05:
// 	b.WriteString(" ipc-posix-name")
// case 0x06:
// 	b.WriteString(" global-name")
// case 0x07:
// 	b.WriteString(" local-name")
// case 0x08:
// 	b.WriteString(" local")
// case 0x09:
// 	b.WriteString(" remote")
// case 0x0a:
// 	b.WriteString(" control-name")
// case 0x0b:
// 	b.WriteString(" socket-domain")
// case 0x0c:
// 	b.WriteString(" socket-type")
// case 0x0d:
// 	b.WriteString(" socket-protocol")
// case 0x0e:
// 	b.WriteString(" target")
// case 0x0f:
// 	b.WriteString(" fsctl-command")
// case 0x10:
// 	b.WriteString(" ioctl-command")
// case 0x11:
// 	b.WriteString(" iokit-register-entry-class")
// case 0x12:
// 	b.WriteString(" iokit-property")
// case 0x13:
// 	b.WriteString(" iokit-connection")
// case 0x14:
// 	b.WriteString(" device-major")
// case 0x15:
// 	b.WriteString(" device-minor")
// case 0x16:
// 	b.WriteString(" device-conforms-to")
// case 0x17:
// 	b.WriteString(" extension")
// case 0x18:
// 	b.WriteString(" extension-class")
// case 0x19:
// 	b.WriteString(" appleevent-destination")
// case 0x1a:
// 	b.WriteString(" system-attribute")
// case 0x1b:
// 	b.WriteString(" right-name")
// case 0x1c:
// 	b.WriteString(" preference-domain")
// case 0x1d:
// 	b.WriteString(" vnode-type")
// case 0x1e:
// 	b.WriteString(" %entitlement-load")
// case 0x1f:
// 	b.WriteString(" %entitlement-boolean")
// case 0x20:
// 	b.WriteString(" %entitlement-string")
// case 0x21:
// 	b.WriteString(" kext-bundle-id")
// case 0x22:
// 	b.WriteString(" info-type")
// case 0x23:
// 	b.WriteString(" notification-name")
// case 0x24:
// 	b.WriteString(" notification-payload")
// case 0x25:
// 	b.WriteString(" semaphore-owner")
// case 0x26:
// 	b.WriteString(" sysctl-name")
// case 0x27:
// 	b.WriteString(" process-path")
// case 0x28:
// 	b.WriteString(" rootless-boot-device-filter")
// case 0x29:
// 	b.WriteString(" rootless-disk-filter")
// case 0x2a:
// 	b.WriteString(" privilege-id")
// case 0x2b:
// 	b.WriteString(" process-attribute")
// case 0x2c:
// 	b.WriteString(" uid")
// case 0x2d:
// 	b.WriteString(" nvram-variable")
// case 0x2e:
// 	b.WriteString(" csr")
// case 0x2f:
// 	b.WriteString(" host-special-port")
// case 0x30:
// 	b.WriteString(" filesystem-name")
// case 0x31:
// 	b.WriteString(" boot-arg")
// case 0x32:
// 	b.WriteString(" xpc-service-name")
// case 0x33:
// 	b.WriteString(" signing-identifier")
// case 0x34:
// 	b.WriteString(" signal-number")
// case 0x35:
// 	b.WriteString(" target-signing-identifier")
// case 0x36:
// 	b.WriteString(" reboot-flags")
// case 0x37:
// 	b.WriteString(" datavault-disk-filter")
// case 0x38:
// 	b.WriteString(" extension-path-ancestor")
// case 0x39:
// 	b.WriteString(" file-attribute")
// case 0x3a:
// 	b.WriteString(" storage-class")
// case 0x3b:
// 	b.WriteString(" storage-class-extension")
// case 0x3c:
// 	b.WriteString(" iokit-usb-interface-class")
// case 0x3d:
// 	b.WriteString(" iokit-usb-interface-subclass")
// case 0x3e:
// 	b.WriteString(" ancestor-signing-identifier")
// case 0x3f:
// 	b.WriteString(" require-ancestor-with-entitlement")
// case 0x81:
// 	b.WriteString(" regex")
// case 0x82:
// 	b.WriteString(" mount-relative-regex")
// case 0x83:
// 	b.WriteString(" xattr-regex")
// case 0x85:
// 	b.WriteString(" ipc-posix-name-regex")
// case 0x86:
// 	b.WriteString(" global-name-regex")
// case 0x87:
// 	b.WriteString(" local-name-regex")
// case 0x91:
// 	b.WriteString(" iokit-user-client-class-regex")
// case 0x92:
// 	b.WriteString(" iokit-property-regex")
// case 0x93:
// 	b.WriteString(" iokit-connection-regex")
// case 0x98:
// 	b.WriteString(" extension-class-regex")
// case 0x99:
// 	b.WriteString(" appleevent-destination-regex")
// case 0x9b:
// 	b.WriteString(" right-name-regex")
// case 0x9c:
// 	b.WriteString(" preference-domain-regex")
// case 0xa0:
// 	b.WriteString(" entitlement-value-regex")
// case 0xa1:
// 	b.WriteString(" kext-bundle-id-regex")
// case 0xa3:
// 	b.WriteString(" notification-name-regex")
// case 0xa6:
// 	b.WriteString(" sysctl-name-regex")
// case 0xa7:
// 	b.WriteString(" process-name-regex")
// default:
// 	b.WriteString(" unknown")
// }

// to string

// filter type
